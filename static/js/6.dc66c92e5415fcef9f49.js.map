{"version":3,"sources":["webpack:///src/components/detail/git_use.vue","webpack:///./src/components/detail/git_use.vue?1b3d","webpack:///./src/components/detail/git_use.vue"],"names":["detail_git_use","render","this","$createElement","_self","_c","_m","staticRenderFns","_vm","_h","staticClass","attrs","id","name","_v","href","target","lang","staticStyle","overflow","position","width","height","top","left","cm-not-content","tabindex","margin-left","margin-bottom","border-right-width","padding-right","padding-bottom","role","outline","z-index","border-bottom","display","cm-text","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/6.dc66c92e5415fcef9f49.js","sourcesContent":["<template>\r\n    <div class=\"artical_detail typora-export os-windows\">\r\n        <div  id='write'  class = 'is-node'><h1><a name='header-n0' class='md-header-anchor '></a>Git使用基本流程</h1><p><strong>编写文件=&gt;把文件提交到暂存区=&gt;提交到本地仓库=&gt;提交到Git服务器仓库</strong></p><h3><a name='header-n4' class='md-header-anchor '></a>1.创建文件夹，切换到创建的文件夹内，并初始化（把当前文件夹变成本地仓库）</h3><p>​\t命令：<strong>git init</strong></p><ul><li><p>注意：如果没有配置绑定用户名及邮箱，这里要配置用户名及邮箱，实现在本机一次配置多次使用加上--global</p><p>命令：<strong>git config --global user.name xxx</strong> </p><p>命令：<strong>git config --global user.email <a href='mailto:xxx@qq.com' target='_blank' class='url'>xxx@qq.com</a></strong> </p></li><li><p>移除全局用户名</p><p>命令：<strong>git config --global --unset user.name</strong></p></li><li><p>下载Git仓库文件</p><p>命令： <strong>git clone 仓库地址 本地需要装仓库文件的文件名</strong></p></li></ul><h3><a name='header-n25' class='md-header-anchor '></a>2.查看本地仓库文件状态，Untracked表示未追踪，该文件夹中有新创建的文件(可跳过此步骤)</h3><ul><li><p>显示结果中，对于仓库根目录中的文件直接显示</p><p>命令：<strong>git status</strong></p></li></ul><h3><a name='header-n32' class='md-header-anchor '></a>3.把所有文件提交到暂存区中</h3><ul><li><p>对于已经进入到暂存区的文件，文件的状态是：changes to be committed</p></li><li><p>对于已经进入过暂存区的文件，再次修改文件，文件的状态是：modified</p></li><li><p>将指定目录下面的文件放到暂存区</p><p>命令：<strong>git add 完整文件名(文件名且带有后缀)</strong></p></li><li><p>将当前仓库中的所有的没有被提交到暂存区的代码放到暂存区</p><p>命令：<strong>git add .</strong></p></li><li><p>默认为将修改的文件和新添加的文件添加到git系统的暂存区（注意：不包括删除的）</p><p>命令：<strong>git add *</strong></p><p>命令：<strong>git add *.js</strong>\t将修改的和新添加的以.js为后缀的文件添加到暂存区</p></li><li><p>将(修改和删除的文件)的操作提交暂存区，但是这个不会将新添加的文件提交到暂存区</p><p>命令：<strong>git add -u</strong>或者<strong>git add --update</strong></p></li><li><p>将所有的修改与删除和未跟踪的文件都告诉暂存区(新创建的文件，修改的文件，删除的文件）</p><p>命令：<strong>git add -A</strong>或者<strong>git add --all</strong></p></li><li><p>可以链式操作,提交所有文件</p><p>命令：<strong>git add -u+git add *</strong></p></li></ul><h3><a name='header-n72' class='md-header-anchor '></a>4.提交到本地仓库</h3><p>​\t命令：<strong>git commit -m 备注说明</strong></p><ul><li>此时必须要进行备注才能提交成功</li><li>或者输入git commit 后再输入i或者a键进入编辑模式，再备注说明，完成后退出编辑模式：esc键，然后保存并退出就输入:wq</li></ul><h3><a name='header-n82' class='md-header-anchor '></a>5.提交到Git服务器仓库</h3><ul><li><p>Git服务器仓库是空仓库，可使用push提交</p><p>命令：<strong>git push 服务器仓库地址 master</strong></p></li><li><p>Git服务器仓库不是空仓库，就是之前已经提交过，现在要继续提交更新，可使用pull提交</p><p>命令：<strong>git pull 服务器仓库地址 master</strong></p></li><li><p>因为每次提交文件都需要仓库服务器地址，可用变量保存服务器地址，每次使用的时候输入变量名替换服务器仓库地址就可以了</p><p>命令：<strong>git remote add urls 服务器地址</strong></p></li><li><p>删除服务器地址：<strong>git remote remove 变量名</strong></p></li><li><p>变量重命名：<strong>git remote rename 旧变量名 新变量名</strong></p></li><li><p>获取变量名保存的服务器地址：<strong>git remote get-url 变量名</strong></p></li><li><p>重新设置变量名保存的服务器地址：<strong>git remote set-url 变量名 服务器地址</strong></p><p><br/></p></li></ul><h3><a name='header-n113' class='md-header-anchor '></a>隔离文件=&gt;不希望把某个文件或者文件夹上传到Git服务器仓库</h3><ul><li><p>在.git同级目录，也就是根目录，创建一个文件.gitignore</p><p>1.手动创建文件.gitignore (电脑会有提示，必须要键入文件名)</p><p>2.使用bash命令：<strong>touch .gitignore</strong> (推荐使用这种方法)</p></li><li><p>打开.gitignore文件进行编辑，一行一行添加不需要git管理的文件</p><p>比如Vue里面的node_modules文件就不需要提交的。</p><p>示例：node_modules/*\t这是把node_modules所有文件隔离</p><p>也可设置单独的文件，node_modules/*.js\t这是把node_modules文件夹下的所有js文件隔离</p></li><li><p><strong>注意也需要把.gitignore文件隔离</strong></p><p>在文件里面加上<strong>.gitignore</strong>就行</p></li></ul><h3><a name='header-n136' class='md-header-anchor '></a>删除本地文件及Git服务器上的文件</h3><h3><a name='header-n137' class='md-header-anchor '></a>第一种方式：</h3><pre class=\"md-fences md-end-block\" lang=\"\"> <div class=\"CodeMirror cm-s-inner CodeMirror-wrap\"><div style=\"overflow: hidden; position: relative; width: 3px; height: 0px; top: 4px; left: 4px;\"></div><div class=\"CodeMirror-scrollbar-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-gutter-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-scroll\" tabindex=\"-1\"><div class=\"CodeMirror-sizer\" style=\"margin-left: 0px; margin-bottom: 0px; border-right-width: 30px; padding-right: 0px; padding-bottom: 0px;\"><div style=\"position: relative; top: 0px;\"><div class=\"CodeMirror-lines\" role=\"presentation\"><div role=\"presentation\" style=\"position: relative; outline: none;\"><div class=\"CodeMirror-measure\"></div><div class=\"CodeMirror-measure\"></div><div style=\"position: relative; z-index: 1;\"></div><div class=\"CodeMirror-code\" role=\"presentation\"><div class=\"CodeMirror-activeline\" style=\"position: relative;\"><div class=\"CodeMirror-activeline-background CodeMirror-linebackground\"></div><div class=\"CodeMirror-gutter-background CodeMirror-activeline-gutter\" style=\"left: 0px; width: 0px;\"></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp;  右击删除/rm 文件名 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; --&gt;物理删除</span></pre></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp;  git add 文件名 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; --&gt;把删除操作提交暂存区</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp;  git commit -m 备注说明 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  --&gt;把删除操作提交本地主仓库</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp;  git push 仓库地址 master &nbsp; &nbsp; &nbsp; &nbsp; --&gt;把删除操作提交服务器仓库</span></pre></div></div></div></div></div><div style=\"position: absolute; height: 30px; width: 1px; border-bottom: 0px solid transparent; top: 112px;\"></div><div class=\"CodeMirror-gutters\" style=\"display: none; height: 142px;\"></div></div></div></pre><h3><a name='header-n139' class='md-header-anchor '></a>第二种方式：</h3><pre class=\"md-fences md-end-block\" lang=\"\"> <div class=\"CodeMirror cm-s-inner CodeMirror-wrap\"><div style=\"overflow: hidden; position: relative; width: 3px; height: 0px; top: 4px; left: 4px;\"></div><div class=\"CodeMirror-scrollbar-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-gutter-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-scroll\" tabindex=\"-1\"><div class=\"CodeMirror-sizer\" style=\"margin-left: 0px; margin-bottom: 0px; border-right-width: 30px; padding-right: 0px; padding-bottom: 0px;\"><div style=\"position: relative; top: 0px;\"><div class=\"CodeMirror-lines\" role=\"presentation\"><div role=\"presentation\" style=\"position: relative; outline: none;\"><div class=\"CodeMirror-measure\"><pre><span>xxxxxxxxxx</span></pre></div><div class=\"CodeMirror-measure\"></div><div style=\"position: relative; z-index: 1;\"></div><div class=\"CodeMirror-code\" role=\"presentation\"><div class=\"CodeMirror-activeline\" style=\"position: relative;\"><div class=\"CodeMirror-activeline-background CodeMirror-linebackground\"></div><div class=\"CodeMirror-gutter-background CodeMirror-activeline-gutter\" style=\"left: 0px; width: 0px;\"></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp;  git rm 文件名 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; --&gt;删除文件</span></pre></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp;  git add 文件名<span class=\"cm-tab\" role=\"presentation\" cm-text=\"\t\"> </span><span class=\"cm-tab\" role=\"presentation\" cm-text=\"\t\">    </span><span class=\"cm-tab\" role=\"presentation\" cm-text=\"\t\">    </span><span class=\"cm-tab\" role=\"presentation\" cm-text=\"\t\">    </span><span class=\"cm-tab\" role=\"presentation\" cm-text=\"\t\">    </span> --提交删除操作到暂存区</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp;  git commit -m 备注说明 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  --&gt;把该删除操作提交本地主仓库</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp;  git push 仓库地址 master &nbsp; &nbsp; &nbsp; &nbsp; --&gt;把该删除操作提交服务器仓库</span></pre></div></div></div></div></div><div style=\"position: absolute; height: 30px; width: 1px; border-bottom: 0px solid transparent; top: 112px;\"></div><div class=\"CodeMirror-gutters\" style=\"display: none; height: 142px;\"></div></div></div></pre><ul><li><p>强制删除文件</p><p>命令：<strong>git rm 文件名 -f</strong></p></li></ul><h3><a name='header-n147' class='md-header-anchor '></a>版本回滚（恢复某个版本的所有文件）</h3><ul><li><p>查看日志--完整的</p><p>命令：<strong>git log</strong></p></li><li><p>查看日志--精简版信息</p><p>命令：<strong>git log --oneline</strong></p></li><li><p>版本回滚操作</p><p>命令：<strong>git reset --hard 版本号</strong></p></li><li><p>在版本回滚后，使用git log获取不到之前的操作记录，可使用以下命令进行查看所有历史记录再进行版本回滚</p><p>历史记录包括：每一次提交的信息；以及每一次版本回滚的操作；分支切换操作</p><p>命令：<strong>git reflog</strong></p></li><li><p>版本回滚后提交到Git服务器仓库（此命令是强制更新服务器上的仓库）</p><p>命令：<strong>git push -f 服务器地址 master</strong></p></li></ul><h3><a name='header-n176' class='md-header-anchor '></a>误删操作</h3><ul><li><p>可使用恢复命令进行恢复刚刚删除的文件</p><p>命令：<strong>git checkout --文件名</strong></p></li></ul><h3><a name='header-n183' class='md-header-anchor '></a>把暂存区的文件撤回来</h3><p>​\t命令：<strong>git reset HEAD --文件名</strong></p><h3><a name='header-n186' class='md-header-anchor '></a>使用分支</h3><ul><li><p>查看当前拥有的所有分支（带*前缀的是当前分支）</p><p>命令：<strong>git branch</strong></p></li><li><p>创建新分支</p><p>命令：<strong>git branch 分支名</strong></p></li><li><p>切换到某个分支上</p><p>命令：<strong>git checkout 分支名</strong></p></li><li><p>合并分支（注意合并分支的前必须要切换到主分支上）</p><p>命令：<strong>git merge 分支名 -m 备注说明</strong></p></li><li><p>合并完分支后，不使用这个分支了，就必须要把这个分支给删掉</p><p>命令：<strong>git branch -d 分支名</strong></p></li></ul><p>&nbsp;</p><p>&nbsp;</p><h2><a name='header-n217' class='md-header-anchor '></a>在GitHub创建个人网站</h2><ul><li>只能显示静态文件，比如HTML、css、js、md等。</li><li>新建一个仓库，仓库名字固定格式：<strong>github用户名.github.io</strong></li><li>输入该仓库地址就可以看到这些文件了(默认显示index.html)</li><li>如果有README.md 也会自动加载README.md</li><li>其他文件不会自动渲染，需要确定的文件名</li><li>访问该网站必须使用https协议访问</li></ul></div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name:'git_use',\r\n\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n    @import'../../assets/css/detail.css';\r\n</style>\n\n\n// WEBPACK FOOTER //\n// src/components/detail/git_use.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"artical_detail typora-export os-windows\"},[_c('div',{staticClass:\"is-node\",attrs:{\"id\":\"write\"}},[_c('h1',[_c('a',{staticClass:\"md-header-anchor \",attrs:{\"name\":\"header-n0\"}}),_vm._v(\"Git使用基本流程\")]),_c('p',[_c('strong',[_vm._v(\"编写文件=>把文件提交到暂存区=>提交到本地仓库=>提交到Git服务器仓库\")])]),_c('h3',[_c('a',{staticClass:\"md-header-anchor \",attrs:{\"name\":\"header-n4\"}}),_vm._v(\"1.创建文件夹，切换到创建的文件夹内，并初始化（把当前文件夹变成本地仓库）\")]),_c('p',[_vm._v(\"​\\t命令：\"),_c('strong',[_vm._v(\"git init\")])]),_c('ul',[_c('li',[_c('p',[_vm._v(\"注意：如果没有配置绑定用户名及邮箱，这里要配置用户名及邮箱，实现在本机一次配置多次使用加上--global\")]),_c('p',[_vm._v(\"命令：\"),_c('strong',[_vm._v(\"git config --global user.name xxx\")])]),_c('p',[_vm._v(\"命令：\"),_c('strong',[_vm._v(\"git config --global user.email \"),_c('a',{staticClass:\"url\",attrs:{\"href\":\"mailto:xxx@qq.com\",\"target\":\"_blank\"}},[_vm._v(\"xxx@qq.com\")])])])]),_c('li',[_c('p',[_vm._v(\"移除全局用户名\")]),_c('p',[_vm._v(\"命令：\"),_c('strong',[_vm._v(\"git config --global --unset user.name\")])])]),_c('li',[_c('p',[_vm._v(\"下载Git仓库文件\")]),_c('p',[_vm._v(\"命令： \"),_c('strong',[_vm._v(\"git clone 仓库地址 本地需要装仓库文件的文件名\")])])])]),_c('h3',[_c('a',{staticClass:\"md-header-anchor \",attrs:{\"name\":\"header-n25\"}}),_vm._v(\"2.查看本地仓库文件状态，Untracked表示未追踪，该文件夹中有新创建的文件(可跳过此步骤)\")]),_c('ul',[_c('li',[_c('p',[_vm._v(\"显示结果中，对于仓库根目录中的文件直接显示\")]),_c('p',[_vm._v(\"命令：\"),_c('strong',[_vm._v(\"git status\")])])])]),_c('h3',[_c('a',{staticClass:\"md-header-anchor \",attrs:{\"name\":\"header-n32\"}}),_vm._v(\"3.把所有文件提交到暂存区中\")]),_c('ul',[_c('li',[_c('p',[_vm._v(\"对于已经进入到暂存区的文件，文件的状态是：changes to be committed\")])]),_c('li',[_c('p',[_vm._v(\"对于已经进入过暂存区的文件，再次修改文件，文件的状态是：modified\")])]),_c('li',[_c('p',[_vm._v(\"将指定目录下面的文件放到暂存区\")]),_c('p',[_vm._v(\"命令：\"),_c('strong',[_vm._v(\"git add 完整文件名(文件名且带有后缀)\")])])]),_c('li',[_c('p',[_vm._v(\"将当前仓库中的所有的没有被提交到暂存区的代码放到暂存区\")]),_c('p',[_vm._v(\"命令：\"),_c('strong',[_vm._v(\"git add .\")])])]),_c('li',[_c('p',[_vm._v(\"默认为将修改的文件和新添加的文件添加到git系统的暂存区（注意：不包括删除的）\")]),_c('p',[_vm._v(\"命令：\"),_c('strong',[_vm._v(\"git add *\")])]),_c('p',[_vm._v(\"命令：\"),_c('strong',[_vm._v(\"git add *.js\")]),_vm._v(\"\\t将修改的和新添加的以.js为后缀的文件添加到暂存区\")])]),_c('li',[_c('p',[_vm._v(\"将(修改和删除的文件)的操作提交暂存区，但是这个不会将新添加的文件提交到暂存区\")]),_c('p',[_vm._v(\"命令：\"),_c('strong',[_vm._v(\"git add -u\")]),_vm._v(\"或者\"),_c('strong',[_vm._v(\"git add --update\")])])]),_c('li',[_c('p',[_vm._v(\"将所有的修改与删除和未跟踪的文件都告诉暂存区(新创建的文件，修改的文件，删除的文件）\")]),_c('p',[_vm._v(\"命令：\"),_c('strong',[_vm._v(\"git add -A\")]),_vm._v(\"或者\"),_c('strong',[_vm._v(\"git add --all\")])])]),_c('li',[_c('p',[_vm._v(\"可以链式操作,提交所有文件\")]),_c('p',[_vm._v(\"命令：\"),_c('strong',[_vm._v(\"git add -u+git add *\")])])])]),_c('h3',[_c('a',{staticClass:\"md-header-anchor \",attrs:{\"name\":\"header-n72\"}}),_vm._v(\"4.提交到本地仓库\")]),_c('p',[_vm._v(\"​\\t命令：\"),_c('strong',[_vm._v(\"git commit -m 备注说明\")])]),_c('ul',[_c('li',[_vm._v(\"此时必须要进行备注才能提交成功\")]),_c('li',[_vm._v(\"或者输入git commit 后再输入i或者a键进入编辑模式，再备注说明，完成后退出编辑模式：esc键，然后保存并退出就输入:wq\")])]),_c('h3',[_c('a',{staticClass:\"md-header-anchor \",attrs:{\"name\":\"header-n82\"}}),_vm._v(\"5.提交到Git服务器仓库\")]),_c('ul',[_c('li',[_c('p',[_vm._v(\"Git服务器仓库是空仓库，可使用push提交\")]),_c('p',[_vm._v(\"命令：\"),_c('strong',[_vm._v(\"git push 服务器仓库地址 master\")])])]),_c('li',[_c('p',[_vm._v(\"Git服务器仓库不是空仓库，就是之前已经提交过，现在要继续提交更新，可使用pull提交\")]),_c('p',[_vm._v(\"命令：\"),_c('strong',[_vm._v(\"git pull 服务器仓库地址 master\")])])]),_c('li',[_c('p',[_vm._v(\"因为每次提交文件都需要仓库服务器地址，可用变量保存服务器地址，每次使用的时候输入变量名替换服务器仓库地址就可以了\")]),_c('p',[_vm._v(\"命令：\"),_c('strong',[_vm._v(\"git remote add urls 服务器地址\")])])]),_c('li',[_c('p',[_vm._v(\"删除服务器地址：\"),_c('strong',[_vm._v(\"git remote remove 变量名\")])])]),_c('li',[_c('p',[_vm._v(\"变量重命名：\"),_c('strong',[_vm._v(\"git remote rename 旧变量名 新变量名\")])])]),_c('li',[_c('p',[_vm._v(\"获取变量名保存的服务器地址：\"),_c('strong',[_vm._v(\"git remote get-url 变量名\")])])]),_c('li',[_c('p',[_vm._v(\"重新设置变量名保存的服务器地址：\"),_c('strong',[_vm._v(\"git remote set-url 变量名 服务器地址\")])]),_c('p',[_c('br')])])]),_c('h3',[_c('a',{staticClass:\"md-header-anchor \",attrs:{\"name\":\"header-n113\"}}),_vm._v(\"隔离文件=>不希望把某个文件或者文件夹上传到Git服务器仓库\")]),_c('ul',[_c('li',[_c('p',[_vm._v(\"在.git同级目录，也就是根目录，创建一个文件.gitignore\")]),_c('p',[_vm._v(\"1.手动创建文件.gitignore (电脑会有提示，必须要键入文件名)\")]),_c('p',[_vm._v(\"2.使用bash命令：\"),_c('strong',[_vm._v(\"touch .gitignore\")]),_vm._v(\" (推荐使用这种方法)\")])]),_c('li',[_c('p',[_vm._v(\"打开.gitignore文件进行编辑，一行一行添加不需要git管理的文件\")]),_c('p',[_vm._v(\"比如Vue里面的node_modules文件就不需要提交的。\")]),_c('p',[_vm._v(\"示例：node_modules/*\\t这是把node_modules所有文件隔离\")]),_c('p',[_vm._v(\"也可设置单独的文件，node_modules/*.js\\t这是把node_modules文件夹下的所有js文件隔离\")])]),_c('li',[_c('p',[_c('strong',[_vm._v(\"注意也需要把.gitignore文件隔离\")])]),_c('p',[_vm._v(\"在文件里面加上\"),_c('strong',[_vm._v(\".gitignore\")]),_vm._v(\"就行\")])])]),_c('h3',[_c('a',{staticClass:\"md-header-anchor \",attrs:{\"name\":\"header-n136\"}}),_vm._v(\"删除本地文件及Git服务器上的文件\")]),_c('h3',[_c('a',{staticClass:\"md-header-anchor \",attrs:{\"name\":\"header-n137\"}}),_vm._v(\"第一种方式：\")]),_c('pre',{staticClass:\"md-fences md-end-block\",attrs:{\"lang\":\"\"}},[_vm._v(\" \"),_c('div',{staticClass:\"CodeMirror cm-s-inner CodeMirror-wrap\"},[_c('div',{staticStyle:{\"overflow\":\"hidden\",\"position\":\"relative\",\"width\":\"3px\",\"height\":\"0px\",\"top\":\"4px\",\"left\":\"4px\"}}),_c('div',{staticClass:\"CodeMirror-scrollbar-filler\",attrs:{\"cm-not-content\":\"true\"}}),_c('div',{staticClass:\"CodeMirror-gutter-filler\",attrs:{\"cm-not-content\":\"true\"}}),_c('div',{staticClass:\"CodeMirror-scroll\",attrs:{\"tabindex\":\"-1\"}},[_c('div',{staticClass:\"CodeMirror-sizer\",staticStyle:{\"margin-left\":\"0px\",\"margin-bottom\":\"0px\",\"border-right-width\":\"30px\",\"padding-right\":\"0px\",\"padding-bottom\":\"0px\"}},[_c('div',{staticStyle:{\"position\":\"relative\",\"top\":\"0px\"}},[_c('div',{staticClass:\"CodeMirror-lines\",attrs:{\"role\":\"presentation\"}},[_c('div',{staticStyle:{\"position\":\"relative\",\"outline\":\"none\"},attrs:{\"role\":\"presentation\"}},[_c('div',{staticClass:\"CodeMirror-measure\"}),_c('div',{staticClass:\"CodeMirror-measure\"}),_c('div',{staticStyle:{\"position\":\"relative\",\"z-index\":\"1\"}}),_c('div',{staticClass:\"CodeMirror-code\",attrs:{\"role\":\"presentation\"}},[_c('div',{staticClass:\"CodeMirror-activeline\",staticStyle:{\"position\":\"relative\"}},[_c('div',{staticClass:\"CodeMirror-activeline-background CodeMirror-linebackground\"}),_c('div',{staticClass:\"CodeMirror-gutter-background CodeMirror-activeline-gutter\",staticStyle:{\"left\":\"0px\",\"width\":\"0px\"}}),_c('pre',{staticClass:\" CodeMirror-line \",attrs:{\"role\":\"presentation\"}},[_c('span',{staticStyle:{\"padding-right\":\"0.1px\"},attrs:{\"role\":\"presentation\"}},[_vm._v(\"    右击删除/rm 文件名                   -->物理删除\")])])]),_c('pre',{staticClass:\" CodeMirror-line \",attrs:{\"role\":\"presentation\"}},[_c('span',{staticStyle:{\"padding-right\":\"0.1px\"},attrs:{\"role\":\"presentation\"}},[_vm._v(\"    git add 文件名                     -->把删除操作提交暂存区\")])]),_c('pre',{staticClass:\" CodeMirror-line \",attrs:{\"role\":\"presentation\"}},[_c('span',{staticStyle:{\"padding-right\":\"0.1px\"},attrs:{\"role\":\"presentation\"}},[_vm._v(\"    git commit -m 备注说明                -->把删除操作提交本地主仓库\")])]),_c('pre',{staticClass:\" CodeMirror-line \",attrs:{\"role\":\"presentation\"}},[_c('span',{staticStyle:{\"padding-right\":\"0.1px\"},attrs:{\"role\":\"presentation\"}},[_vm._v(\"    git push 仓库地址 master         -->把删除操作提交服务器仓库\")])])])])])])]),_c('div',{staticStyle:{\"position\":\"absolute\",\"height\":\"30px\",\"width\":\"1px\",\"border-bottom\":\"0px solid transparent\",\"top\":\"112px\"}}),_c('div',{staticClass:\"CodeMirror-gutters\",staticStyle:{\"display\":\"none\",\"height\":\"142px\"}})])])]),_c('h3',[_c('a',{staticClass:\"md-header-anchor \",attrs:{\"name\":\"header-n139\"}}),_vm._v(\"第二种方式：\")]),_c('pre',{staticClass:\"md-fences md-end-block\",attrs:{\"lang\":\"\"}},[_vm._v(\" \"),_c('div',{staticClass:\"CodeMirror cm-s-inner CodeMirror-wrap\"},[_c('div',{staticStyle:{\"overflow\":\"hidden\",\"position\":\"relative\",\"width\":\"3px\",\"height\":\"0px\",\"top\":\"4px\",\"left\":\"4px\"}}),_c('div',{staticClass:\"CodeMirror-scrollbar-filler\",attrs:{\"cm-not-content\":\"true\"}}),_c('div',{staticClass:\"CodeMirror-gutter-filler\",attrs:{\"cm-not-content\":\"true\"}}),_c('div',{staticClass:\"CodeMirror-scroll\",attrs:{\"tabindex\":\"-1\"}},[_c('div',{staticClass:\"CodeMirror-sizer\",staticStyle:{\"margin-left\":\"0px\",\"margin-bottom\":\"0px\",\"border-right-width\":\"30px\",\"padding-right\":\"0px\",\"padding-bottom\":\"0px\"}},[_c('div',{staticStyle:{\"position\":\"relative\",\"top\":\"0px\"}},[_c('div',{staticClass:\"CodeMirror-lines\",attrs:{\"role\":\"presentation\"}},[_c('div',{staticStyle:{\"position\":\"relative\",\"outline\":\"none\"},attrs:{\"role\":\"presentation\"}},[_c('div',{staticClass:\"CodeMirror-measure\"},[_c('pre',[_c('span',[_vm._v(\"xxxxxxxxxx\")])])]),_c('div',{staticClass:\"CodeMirror-measure\"}),_c('div',{staticStyle:{\"position\":\"relative\",\"z-index\":\"1\"}}),_c('div',{staticClass:\"CodeMirror-code\",attrs:{\"role\":\"presentation\"}},[_c('div',{staticClass:\"CodeMirror-activeline\",staticStyle:{\"position\":\"relative\"}},[_c('div',{staticClass:\"CodeMirror-activeline-background CodeMirror-linebackground\"}),_c('div',{staticClass:\"CodeMirror-gutter-background CodeMirror-activeline-gutter\",staticStyle:{\"left\":\"0px\",\"width\":\"0px\"}}),_c('pre',{staticClass:\" CodeMirror-line \",attrs:{\"role\":\"presentation\"}},[_c('span',{staticStyle:{\"padding-right\":\"0.1px\"},attrs:{\"role\":\"presentation\"}},[_vm._v(\"    git rm 文件名                     -->删除文件\")])])]),_c('pre',{staticClass:\" CodeMirror-line \",attrs:{\"role\":\"presentation\"}},[_c('span',{staticStyle:{\"padding-right\":\"0.1px\"},attrs:{\"role\":\"presentation\"}},[_vm._v(\"    git add 文件名\"),_c('span',{staticClass:\"cm-tab\",attrs:{\"role\":\"presentation\",\"cm-text\":\"\\t\"}},[_vm._v(\" \")]),_c('span',{staticClass:\"cm-tab\",attrs:{\"role\":\"presentation\",\"cm-text\":\"\\t\"}},[_vm._v(\"    \")]),_c('span',{staticClass:\"cm-tab\",attrs:{\"role\":\"presentation\",\"cm-text\":\"\\t\"}},[_vm._v(\"    \")]),_c('span',{staticClass:\"cm-tab\",attrs:{\"role\":\"presentation\",\"cm-text\":\"\\t\"}},[_vm._v(\"    \")]),_c('span',{staticClass:\"cm-tab\",attrs:{\"role\":\"presentation\",\"cm-text\":\"\\t\"}},[_vm._v(\"    \")]),_vm._v(\" --提交删除操作到暂存区\")])]),_c('pre',{staticClass:\" CodeMirror-line \",attrs:{\"role\":\"presentation\"}},[_c('span',{staticStyle:{\"padding-right\":\"0.1px\"},attrs:{\"role\":\"presentation\"}},[_vm._v(\"    git commit -m 备注说明                -->把该删除操作提交本地主仓库\")])]),_c('pre',{staticClass:\" CodeMirror-line \",attrs:{\"role\":\"presentation\"}},[_c('span',{staticStyle:{\"padding-right\":\"0.1px\"},attrs:{\"role\":\"presentation\"}},[_vm._v(\"    git push 仓库地址 master         -->把该删除操作提交服务器仓库\")])])])])])])]),_c('div',{staticStyle:{\"position\":\"absolute\",\"height\":\"30px\",\"width\":\"1px\",\"border-bottom\":\"0px solid transparent\",\"top\":\"112px\"}}),_c('div',{staticClass:\"CodeMirror-gutters\",staticStyle:{\"display\":\"none\",\"height\":\"142px\"}})])])]),_c('ul',[_c('li',[_c('p',[_vm._v(\"强制删除文件\")]),_c('p',[_vm._v(\"命令：\"),_c('strong',[_vm._v(\"git rm 文件名 -f\")])])])]),_c('h3',[_c('a',{staticClass:\"md-header-anchor \",attrs:{\"name\":\"header-n147\"}}),_vm._v(\"版本回滚（恢复某个版本的所有文件）\")]),_c('ul',[_c('li',[_c('p',[_vm._v(\"查看日志--完整的\")]),_c('p',[_vm._v(\"命令：\"),_c('strong',[_vm._v(\"git log\")])])]),_c('li',[_c('p',[_vm._v(\"查看日志--精简版信息\")]),_c('p',[_vm._v(\"命令：\"),_c('strong',[_vm._v(\"git log --oneline\")])])]),_c('li',[_c('p',[_vm._v(\"版本回滚操作\")]),_c('p',[_vm._v(\"命令：\"),_c('strong',[_vm._v(\"git reset --hard 版本号\")])])]),_c('li',[_c('p',[_vm._v(\"在版本回滚后，使用git log获取不到之前的操作记录，可使用以下命令进行查看所有历史记录再进行版本回滚\")]),_c('p',[_vm._v(\"历史记录包括：每一次提交的信息；以及每一次版本回滚的操作；分支切换操作\")]),_c('p',[_vm._v(\"命令：\"),_c('strong',[_vm._v(\"git reflog\")])])]),_c('li',[_c('p',[_vm._v(\"版本回滚后提交到Git服务器仓库（此命令是强制更新服务器上的仓库）\")]),_c('p',[_vm._v(\"命令：\"),_c('strong',[_vm._v(\"git push -f 服务器地址 master\")])])])]),_c('h3',[_c('a',{staticClass:\"md-header-anchor \",attrs:{\"name\":\"header-n176\"}}),_vm._v(\"误删操作\")]),_c('ul',[_c('li',[_c('p',[_vm._v(\"可使用恢复命令进行恢复刚刚删除的文件\")]),_c('p',[_vm._v(\"命令：\"),_c('strong',[_vm._v(\"git checkout --文件名\")])])])]),_c('h3',[_c('a',{staticClass:\"md-header-anchor \",attrs:{\"name\":\"header-n183\"}}),_vm._v(\"把暂存区的文件撤回来\")]),_c('p',[_vm._v(\"​\\t命令：\"),_c('strong',[_vm._v(\"git reset HEAD --文件名\")])]),_c('h3',[_c('a',{staticClass:\"md-header-anchor \",attrs:{\"name\":\"header-n186\"}}),_vm._v(\"使用分支\")]),_c('ul',[_c('li',[_c('p',[_vm._v(\"查看当前拥有的所有分支（带*前缀的是当前分支）\")]),_c('p',[_vm._v(\"命令：\"),_c('strong',[_vm._v(\"git branch\")])])]),_c('li',[_c('p',[_vm._v(\"创建新分支\")]),_c('p',[_vm._v(\"命令：\"),_c('strong',[_vm._v(\"git branch 分支名\")])])]),_c('li',[_c('p',[_vm._v(\"切换到某个分支上\")]),_c('p',[_vm._v(\"命令：\"),_c('strong',[_vm._v(\"git checkout 分支名\")])])]),_c('li',[_c('p',[_vm._v(\"合并分支（注意合并分支的前必须要切换到主分支上）\")]),_c('p',[_vm._v(\"命令：\"),_c('strong',[_vm._v(\"git merge 分支名 -m 备注说明\")])])]),_c('li',[_c('p',[_vm._v(\"合并完分支后，不使用这个分支了，就必须要把这个分支给删掉\")]),_c('p',[_vm._v(\"命令：\"),_c('strong',[_vm._v(\"git branch -d 分支名\")])])])]),_c('p',[_vm._v(\" \")]),_c('p',[_vm._v(\" \")]),_c('h2',[_c('a',{staticClass:\"md-header-anchor \",attrs:{\"name\":\"header-n217\"}}),_vm._v(\"在GitHub创建个人网站\")]),_c('ul',[_c('li',[_vm._v(\"只能显示静态文件，比如HTML、css、js、md等。\")]),_c('li',[_vm._v(\"新建一个仓库，仓库名字固定格式：\"),_c('strong',[_vm._v(\"github用户名.github.io\")])]),_c('li',[_vm._v(\"输入该仓库地址就可以看到这些文件了(默认显示index.html)\")]),_c('li',[_vm._v(\"如果有README.md 也会自动加载README.md\")]),_c('li',[_vm._v(\"其他文件不会自动渲染，需要确定的文件名\")]),_c('li',[_vm._v(\"访问该网站必须使用https协议访问\")])])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-247f67f6\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/detail/git_use.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-247f67f6\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./git_use.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./git_use.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./git_use.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-247f67f6\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./git_use.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-247f67f6\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/detail/git_use.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}